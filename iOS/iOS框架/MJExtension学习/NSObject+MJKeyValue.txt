MJKeyValue :KeyValue协议

// 只有这个数组中的属性名才允许进行字典和模型的转换
+ (NSArray *)mj_allowedPropertyNames

// 这个数组中的属性名将会被忽略：不进行字典和模型的转换
+ (NSArray *)mj_ignoredPropertyNames

// 将属性名换为其他key去字典中取值 字典中的key是属性名，value是从字典中取值用的key

+ (NSDictionary *)mj_replacedKeyFromPropertyName

// 将属性名换为其他key去字典中取值
+ (id)mj_replacedKeyFromPropertyName121:(NSString *)propertyName

// 数组中需要转换的模型类 字典中的key是数组属性名，value是数组中存放模型的Class（Class类型或者NSString类型）
+ (NSDictionary *)mj_objectClassInArray

// 旧值换新值，用于过滤字典中的值
- (id)mj_newValueFromOldValue:(id)oldValue property:(MJProperty *)property

// 当字典转模型完毕时调用
- (void)mj_keyValuesDidFinishConvertingToObject

// 当模型转字典完毕时调用
- (void)mj_objectDidFinishConvertingToKeyValues

// 模型转字典时，字典的key是否参考replacedKeyFromPropertyName等方法（父类设置了，子类也会继承下来）
+ (void)mj_referenceReplacedKeyWhenCreatingKeyValues:(BOOL)reference


/**
 *  将字典的键值对转成模型属性
 *  @param keyValues 字典(可以是NSDictionary、NSData、NSString)
 */
- (instancetype)mj_setKeyValues:(id)keyValues
/**
 *  将字典的键值对转成模型属性
 *  @param keyValues 字典(可以是NSDictionary、NSData、NSString)
 *  @param context   CoreData上下文
 */
- (instancetype)mj_setKeyValues:(id)keyValues context:(NSManagedObjectContext *)context;

// 将模型转成字典
- (NSMutableDictionary *)mj_keyValues;
- (NSMutableDictionary *)mj_keyValuesWithKeys:(NSArray *)keys
- (NSMutableDictionary *)mj_keyValuesWithIgnoredKeys:(NSArray *)ignoredKeys

// 通过模型数组来创建一个字典数组
+ (NSMutableArray *)mj_keyValuesArrayWithObjectArray:(NSArray *)objectArray;
+ (NSMutableArray *)mj_keyValuesArrayWithObjectArray:(NSArray *)objectArray keys:(NSArray *)keys;
+ (NSMutableArray *)mj_keyValuesArrayWithObjectArray:(NSArray *)objectArray ignoredKeys:(NSArray *)ignoredKeys;

// 通过字典来创建一个模型 keyValues 字典(可以是NSDictionary、NSData、NSString)
+ (instancetype)mj_objectWithKeyValues:(id)keyValues

// 通过字典来创建一个CoreData模型
+ (instancetype)mj_objectWithKeyValues:(id)keyValues context:(NSManagedObjectContext *)context

// 通过plist来创建一个模型
// filename 文件名(仅限于mainBundle中的文件)
+ (instancetype)mj_objectWithFilename:(NSString *)filename


// 通过plist来创建一个模型
+ (instancetype)mj_objectWithFile:(NSString *)file;

// 通过字典数组来创建一个模型数组
+ (NSMutableArray *)mj_objectArrayWithKeyValuesArray:(id)keyValuesArray

//  通过字典数组来创建一个模型数组
+ (NSMutableArray *)mj_objectArrayWithKeyValuesArray:(id)keyValuesArray context:(NSManagedObjectContext *)context

// 通过plist来创建一个模型数组
+ (NSMutableArray *)mj_objectArrayWithFilename:(NSString *)filename;

// 通过plist来创建一个模型数组
+ (NSMutableArray *)mj_objectArrayWithFile:(NSString *)file;

// 转换为JSON Data
- (NSData *)mj_JSONData;

// 转换为字典或者数组
- (id)mj_JSONObject;

// 转换为JSON 字符串
- (NSString *)mj_JSONString;

/*
 0. 获取JsonObject -> 字典对象
 1. 获取类中所有属性
 2. 外界是否允许 对该属性赋值
 3. 是否是忽略的 对该属性赋值
 4.
 */


