<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.itheima.dao.IUserDao">
    <!--    配置查询结果的列名和实体类的属性名的对应关系-->
    <resultMap id="userMap" type="UsER">
        <!--    主键字段的对应-->
        <id property="id" column="id"></id>
        <!--    非主键字段的对应-->
        <result property="username" column="username"></result>
        <result property="address" column="address"></result>
        <result property="sex" column="sex"></result>
        <result property="birthday" column="birthday"></result>
    </resultMap>
    <!--了解的内容，抽取重复的sql语句-->
    <sql id="defaultUser">
        select * from user
    </sql>
    <select id="findAll" resultMap="userMap">
        <!--查询所有-->
        <include refid="defaultUser"></include>
    </select>
    <!--    根据id查询用户-->
    <select id="findById" parameterType="INT" resultType="uSeR">
        <!-- select *from user where id = #{uid};-->
        select id as id,username as username,address as address,sex as sex,birthday as birthday from user where id =
        #{uid};
    </select>
    <!--    根据用户名称模糊查询-->
    <select id="findByName" parameterType="string" resultType="User">
        <!--select * from user where username like #{name}-->
        <!--        select * from user where username like '%${value}%'; -->
        select id as id,username as username,address as address,sex as sex,birthday as birthday from user where
        username like '%${value}%';
    </select>
    <!--    根据queryVo的条件查询用户-->
    <select id="findUserByVo" parameterType="com.itheima.domain.QueryVo" resultType="USER">
        select * from user where username like #{user.username};
    </select>
    <!--    根据条件查询-->
    <select id="findUserByCondition"  resultMap="userMap" parameterType="user">
        select * from user
        <where>
            <if test="username != null">
                and username=#{username}
            </if>
            <if test="sex != null">
                and sex = #{sex}
            </if>
        </where>
    </select>
    <!--   根据queryvo中的id集合实现查询用户列表-->
    <select id="findUserInIds" resultMap="userMap" parameterType="queryvo">
        <include refid="defaultUser"></include>
        <where>
            <if test="ids != null and ids.size()>0">
            <foreach collection="ids" open="and id in(" close=")" item="uid" separator=",">
                #{uid}
            </foreach>
            </if>
        </where>
    </select>
</mapper>