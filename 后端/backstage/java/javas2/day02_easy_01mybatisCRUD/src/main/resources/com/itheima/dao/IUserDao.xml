<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.itheima.dao.IUserDao">
        <!--    配置查询结果的列名和实体类的属性名的对应关系-->
        <resultMap id="userMap" type="UsER">
        <!--    主键字段的对应-->
            <id property="id" column="id"></id>
        <!--    非主键字段的对应-->
            <result property="username" column="username"></result>
            <result property="userAddress" column="address"></result>
            <result property="sex" column="sex"></result>
            <result property="birthday" column="birthday"></result>
        </resultMap>
        <!--配置查询所有-->
        <select id="findAll" resultMap="userMap">
        <!--查询所有-->
            select * from user;
        </select>
<!--    保存用户    -->
    <insert id="saveUser" parameterType="user">
    <!---配置插入操作后，获取插入数据的id -->
    <selectKey keyProperty="id" keyColumn="id" resultType="int" order="AFTER">
        select last_insert_id();
    </selectKey>
        insert into user (username,address,sex,birthday)value(#{username},#{userAddress},#{sex},#{birthday});
    </insert>
<!--    更新用户-->
    <update id="updateUser" parameterType="USER">
        update user set username=#{username},address=#{userAddress},sex=#{sex},birthday=#{birthday} where id=#{id};
    </update>
<!--    删除用户-->
    <delete id="deleteUser" parameterType="java.lang.Integer">
        delete from user where id=#{uid};
    </delete>
<!--    根据id查询用户-->
    <select id="findById" parameterType="INT" resultType="uSeR">
        <!-- select *from user where id = #{uid};-->
        select id as id,username as username,address as userAddress,sex as sex,birthday as birthday from user where id = #{uid};
    </select>
<!--    根据用户名称模糊查询-->
    <select id="findByName" parameterType="string" resultType="User">
        <!--select * from user where username like #{name}-->
        <!--        select * from user where username like '%${value}%'; -->
        select id as id,username as username,address as userAddress,sex as sex,birthday as birthday from user where username like '%${value}%';
    </select>
<!--    获取用户的总记录条数-->
    <select id="findTotal" resultType="int">
        select count(id) from user;
    </select>
<!--    根据queryVo的条件查询用户-->
    <select id="findUserByVo" parameterType="com.itheima.domain.QueryVo" resultType="USER">
        select * from user where username like #{user.username};
    </select>
</mapper>